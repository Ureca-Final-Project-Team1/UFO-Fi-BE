name: ufo_fi Main CD

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 시작
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: application-prod.properties 설정
        run: |
          touch src/main/resources/application-prod.properties
          echo "${{ secrets.APPLICATION_PRODUCTION_PROPERTIES }}" > src/main/resources/application-prod.properties

      - name: Gradle 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 빌드 실행
        run: ./gradlew clean build --stacktrace

      - name: Docker 이미지 빌드
        run: docker build -t $DOCKER_USER/ufo_fi_prod_be:latest .

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: DockerHub push
        run: docker push $DOCKER_USER/ufo_fi_prod_be:latest

      - name: AWS Credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Prod 배포 스크립트 실행 via SSM CLI
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Name,Values=ufo_fi_prod_1" \
            --parameters '{"commands":["export FIREBASE_JSON_B64=${{ secrets.FIREBASE_JSON_B64 }} && sudo bash /home/ubuntu/deploy_prod.sh"]}' \
            --comment "Prod 배포 스크립트 실행" \
            --region ap-northeast-2 \
            --output text \
            --query "Command.CommandId")
      
          echo "SSM Command ID: $COMMAND_ID"
      
          # 명령어 실행이 완료될 때까지 대기
          aws ssm wait command-executed \
            --command-id "$COMMAND_ID" \
            --instance-ids $(aws ec2 describe-instances \
              --filters "Name=tag:Name,Values=ufo_fi_prod_1" \
              --region ap-northeast-2 \
              --query "Reservations[*].Instances[*].InstanceId" \
              --output text) \
            --region ap-northeast-2

